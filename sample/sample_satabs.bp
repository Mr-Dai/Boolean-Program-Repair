// automatically generated by CPROVER/SATABS
// and editted manually
// variables with procedure-global scope

decl b0;              // x == 0
decl b1;              // x > 1
decl b2;              // x == 1
decl b3;  	      // -1 + x > 1

// main
void main() begin

      // initialization of the shared-global and thread-local variables

      b0:=*; 
      b1:=*; 
      b2:=*; 
      b3:=*; 

 PC0: c$$__CPROVER_initialize();

 PC1: c$$main();

 PC2: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

    // file <built-in> line 23
 PC3: skip; // no predicates changed

    // file <built-in> line 25
 PC4: skip; // no predicates changed

    // file <built-in> line 26
 PC5: skip; // no predicates changed

    // file <built-in> line 27
 PC6: skip; // no predicates changed

    // file <built-in> line 36
 PC7: skip; // no predicates changed

    // file sample.c line 1
 PC8: b0,b1,b2,b3 := 1,0,0,0;
    // TO Predicates: b0 b1 b2 b3

 PC9: skip;

end

// c::main
void c$$main() begin

    // file sample.c line 4 function main
PC10: b0,b1,b2,b3 := 0,1,0,1;
    // TO Predicates: b0 b1 b2 b3

    // file sample.c line 5 function main
    // FROM Predicates: b2 b3
PC11: c$$f();
    // TO Predicates: b2 b3

    // file sample.c line 6 function main
    // FROM Predicates: b0
PC12: assert(b0);

    // file sample.c line 7 function main
PC13: skip;

end

// c::f
void c$$f() begin

    // file sample.c line 10 function f
    // FROM Predicates: b2 b3
PC14: b0,b1,b2,b3 := b2,b3,*,*;
    // TO Predicates: b0 b1 b2 b3

    // file sample.c line 11 function f
    // FROM Predicates: b0 b1
PC15: if !b1 then goto l1; fi;
    // TO Predicates: b0

    // file sample.c line 12 function f
PC16: c$$f();

    // file sample.c line 14 function f
    // FROM Predicates: b0
  l1:
PC17: skip; // no predicates changed
    // TO Predicates: b0

    // FROM Predicates: b0
PC18: return;
    // TO Predicates: b0

    // FROM Predicates: b0
PC19: skip;
    // TO Predicates: b0

end

